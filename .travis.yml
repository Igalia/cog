---
language: cpp
dist: xenial
sudo: false

env:
  global:
    - TOOLCHAINS_URL=https://wk-contrib.igalia.com/yocto/meta-perf-browser/browsers/nightly/sdk
    - TOOLCHAIN_NAME=wandboard-mesa/browsers-glibc-x86_64-core-image-weston-browsers-armv7at2hf-neon-wandboard-mesa-toolchain-1.0.sh

addons:
  apt:
    packages: &base-deps
      - ninja-build

matrix:
  include:
    - env:
        - BUILD_TYPE=Debug WEBKITGTK=false
      addons: {apt: {packages: [*base-deps]}}
    - env:
        - BUILD_TYPE=Release WEBKITGTK=false
      addons: {apt: {packages: [*base-deps]}}
    - env:
        - BUILD_TYPE=Release WEBKITGTK=true
      addons: {apt: {packages: [*base-deps, cmake, libwebkit2gtk-4.0-dev]}}

cache:
  apt: true
  ccache: true
  directories:
    - $HOME/toolchain

install:
  - |-
    : 'Downloading toolchain'
    set -e
    if ${WEBKITGTK} ; then
        echo 'Toolchain download not needed for WebKitGTK build'
    else
        curl --progress-bar --retry 3 \
            --time-cond ~/toolchain/.installed -L -o ~/toolchain.sh \
            "${TOOLCHAINS_URL}/${TOOLCHAIN_NAME}"
    fi
  - |-
    : 'Installing toolchain'
    set -e
    if ${WEBKITGTK} ; then
        echo 'Toolchain installation not needed for WebKitGTK build'
    elif [[ -r ~/toolchain.sh ]] ; then
        rm -rf ~/toolchain/
        chmod +x ~/toolchain.sh
        ~/toolchain.sh -d ~/toolchain/ -y
        touch ~/toolchain/.installed
    else
        echo 'Cached toolchain already up to date'
    fi

script:
  - |-
    : 'Configuring'
    set -e
    CMAKEOPTS=(-DCMAKE_BUILD_TYPE=${BUILD_TYPE})
    if ${WEBKITGTK} ; then \
        CMAKEOPTS+=(-DCOG_USE_WEBKITGTK=ON)
    else
        CMAKEOPTS+=(-DCOG_USE_WEBKITGTK=OFF
                    -DCOG_DBUS_SYSTEM_BUS=ON
                    -DCOG_PLATFORM_FDO=ON)
        source ~/toolchain/environment-setup-armv7at2hf-neon-poky-linux-gnueabi
    fi
    echo "CMake options: ${CMAKEOPTS[*]}"
    mkdir _build && cd _build
    cmake -GNinja "${CMAKEOPTS[@]}" ..
  - |-
    : 'Building'
    TERM=dumb ninja
